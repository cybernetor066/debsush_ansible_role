---
# # tasks file for consul_role
#   - name: "Echo operation (Task1)"
#     shell: echo "Hello DevOps World!"
#     register: "output_var"

#   # - name: "Debug setting (Task1)"
#   #   debug: var=output_var.stdout_lines

#   # - name: "Debug setting (Task1)"
#   #   debug:
#   #     var: "output_var.stdout_lines"
#       # verbosity: 2

#   # Start main operatons
#   # INSTALLING CONSUL
#   - name: Update apt
#     apt:
#       update_cache: yes



#   - name: "Install Consul Server Step1 (1)"
#     apt:
#       name: unzip, gnupg2,curl,wget
#       # update_cache: yes
#       state: present

#   - name: "Install Consul Server Step1 (2)"
#     shell:
#       cmd: wget https://releases.hashicorp.com/consul/1.8.4/consul_1.8.4_linux_amd64.zip

#   - name: "Install Consul Server Step1 (3)"
#     shell:
#       cmd: unzip consul_1.8.4_linux_amd64.zip

#   - name: "Install Consul Server Step1 (4)"
#     shell:
#       cmd: mv consul /usr/local/bin/

#   - name: "Install Consul Server Step1 (5)"
#     shell:
#       cmd: consul --version





#   - name: "Create Consul Service File Step2 (1)"
#     shell:
#       cmd: groupadd --system consul && useradd -s /sbin/nologin --system -g consul consul

#   - name: "Create Consul Service File Step2 (2)"
#     shell:
#       cmd: mkdir -p /var/lib/consul && mkdir -p /etc/consul.d


#   - name: "Create Consul Service File Step2 (3)"
#     shell:
#       cmd: chown -R consul:consul /var/lib/consul && chmod -R 775 /var/lib/consul && chown -R consul:consul /etc/consul.d


#   - name: "Create Consul Service File Step2 (4)"
#     copy:
#       src: /home/cybernetor066/Desktop/Freelance-Projects/Debsush-Ansible-Project/miscs/debsush_repo/scripts/consul.service
#       dest: /etc/systemd/system/consul.service
#       # owner: "{{ consul_user }}"
#       # group: "{{ consul_group }}"
#       # mode: 0755


#   # - name: "Create Consul Service File Step2 (5)"
#   #   shell:
#   #     cmd: systemctl daemon-reload






  - name: "Configure Consul Server Step3 (0.0))"
    shell: ip add | grep global | grep -o -m 1 '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}'
    register: "extracted_adress"

  - name: "Configure Consul Server Step3 (0.1))"
    debug:
      var: extracted_adress.stdout_lines[0]

  - name: "Configure Consul Server Step3 (1))"
    shell:
      cmd: consul keygen
    register: consul_secret


  - name: "Configure Consul Server Step3 (2))"
    debug:
      var: "consul_secret.stdout_lines"


  - name: "Configure Consul Server Step3 (3))"
    copy:
      src: /home/cybernetor066/Desktop/Freelance-Projects/Debsush-Ansible-Project/miscs/debsush_repo/scripts/config.json
      dest: /etc/consul.d/config.json


  - name: "Configure Consul Server Step3 (4))"
    shell:
      # cmd: sed -i 's/\"encrypt\":[^ ]*/\"encrypt\":"{{ consul_secret }}"/' /etc/consul.d/config.json
      # cmd: sed -i -e 's/"encrypt":[^ ]*/"encrypt":"Value1"/' -e 's/"bind_addr":[^ ]*/"bind_addr":"{{ extracted_adress.stdout_lines[0] }}",/' /home/cybernetor066/Desktop/temp_folder/config.json
      # cmd: sed -i -e 's/"encrypt":[^ ]*/"encrypt":"{{ consul_secret.stdout_lines[0] }}"/' -e 's/"bind_addr":[^ ]*/"bind_addr":"{{ extracted_adress.stdout_lines[0] }}",/' /etc/consul.d/config.json
      # cmd: sed -i -e 's/"encrypt":[^ ]*/"encrypt":"UfVLSs07EqB8mtupz+H7plRevVqwzc100hfTrRB0L4o="/' -e 's/"bind_addr":[^ ]*/"bind_addr":"{{ extracted_adress.stdout_lines[0] }}",/' /etc/consul.d/config.json
      cmd: sed -i -e 's#"encrypt":[^ ]*#"encrypt":"{{ consul_secret.stdout_lines[0] }}"#' -e 's/"bind_addr":[^ ]*/"bind_addr":"{{ extracted_adress.stdout_lines[0] }}",/' /etc/consul.d/config.json


  - name: "Configure Consul Server Step3 (5))"
    shell:
      cmd: systemctl start consul && systemctl enable consul


  - name: "Configure Consul Server Step3 (6))"
    shell:
      # cmd: sed -i -e "s/-advertise=[^ ]*/-advertise={{ extracted_adress.stdout_lines[0] }}  \\ /" -e "s/-bind=[^ ]*/-bind={{ extracted_adress.stdout_lines[0] }} \\ /" /home/cybernetor066/Desktop/Freelance-Projects/Debsush-Ansible-Project/miscs/debsush_repo/scripts/consul.service
      cmd: sed -i -e "s/-advertise=[^ ]*/-advertise={{ extracted_adress.stdout_lines[0] }} \\ /" -e "s/-bind=[^ ]*/-bind={{ extracted_adress.stdout_lines[0] }} \\ /" /etc/systemd/system/consul.service


  - name: "Configure Consul Server Step3 (7))"
    shell:
      cmd: systemctl daemon-reload && systemctl enable consul && systemctl restart consul


















































































